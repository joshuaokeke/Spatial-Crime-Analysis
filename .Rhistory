plot(g_gun)
plot(f_gun)
plot(k_gun)
plot(l_gun)
plot(pcf_gun)
#to calculate the function for a set of simulated realizations of IRP/CSR in the same study area.
g_gun_env <- envelope(gun, Gest, nsim=99, nrank=1)
library(rgdal)
library(spatstat)
library(sp)
library(sf)
library(spatstat.geom)
library(maptools)
g_gun <- Gest(gun)
f_gun <- Fest(gun)
k_gun <- Kest(gun)
l_gun <- Lest(gun)
pcf_gun <- pcf(gun)
par(mfrow = c(1, 1))
plot(g_gun)
plot(f_gun)
plot(k_gun)
plot(l_gun)
plot(pcf_gun)
g_gun_env <- envelope(gun, Gest, nsim=99, nrank=1)
g_gun <- Gest(gun)
f_gun <- Fest(gun)
k_gun <- Kest(gun)
l_gun <- Lest(gun)
pcf_gun <- pcf(gun)
par(mfrow = c(1, 1))
plot(g_gun)
plot(f_gun)
plot(k_gun)
plot(l_gun)
plot(pcf_gun)
#to calculate the function for a set of simulated realizations of IRP/CSR in the same study area.
g_gun_env <- envelope(gun, Gest, nsim=99, nrank=1)
g_gun <- Gest(gun)
f_gun <- Fest(gun)
k_gun <- Kest(gun)
l_gun <- Lest(gun)
pcf_gun <- pcf(gun)
par(mfrow = c(1, 1))
plot(g_gun)
plot(f_gun)
plot(k_gun)
plot(l_gun)
plot(pcf_gun)
#to calculate the function for a set of simulated realizations of IRP/CSR in the same study area.
g_gun_env <- envelope(gun, Gest, nsim=99, nrank=1)
g_gun <- Gest(gun)
f_gun <- Fest(gun)
k_gun <- Kest(gun)
l_gun <- Lest(gun)
pcf_gun <- pcf(gun)
par(mfrow = c(1, 1))
plot(g_gun)
plot(f_gun)
plot(k_gun)
plot(l_gun)
plot(pcf_gun)
#to calculate the function for a set of simulated realizations of IRP/CSR in the same study area.
g_gun_env <- envelope(gun, Gest, nsim=99, nrank=1)
g_gun <- Gest(gun)
f_gun <- Fest(gun)
k_gun <- Kest(gun)
l_gun <- Lest(gun)
pcf_gun <- pcf(gun)
par(mfrow = c(1, 1))
plot(g_gun)
plot(f_gun)
plot(k_gun)
plot(l_gun)
plot(pcf_gun)
#to calculate the function for a set of simulated realizations of IRP/CSR in the same study area.
g_gun_env <- envelope(gun, Gest, nsim=99, nrank=1)
g_gun <- Gest(gun)
f_gun <- Fest(gun)
k_gun <- Kest(gun)
l_gun <- Lest(gun)
pcf_gun <- pcf(gun)
par(mfrow = c(1, 1))
plot(g_gun)
plot(f_gun)
plot(k_gun)
plot(l_gun)
plot(pcf_gun)
#to calculate the function for a set of simulated realizations of IRP/CSR in the same study area.
g_gun_env <- envelope(gun, Gest, nsim=99, nrank=1)
library(sp)
library(spatstat)
library(sf)
library(spatstat.geom)
g_gun <- Gest(gun)
f_gun <- Fest(gun)
k_gun <- Kest(gun)
l_gun <- Lest(gun)
pcf_gun <- pcf(gun)
par(mfrow = c(1, 1))
plot(g_gun)
plot(f_gun)
plot(k_gun)
plot(l_gun)
plot(pcf_gun)
#to calculate the function for a set of simulated realizations of IRP/CSR in the same study area.
g_gun_env <- envelope(gun, Gest, nsim=99, nrank=1)
library(sp)
library(spatstat)
library(sf)
library(spatstat.geom)
g_gun <- Gest(gun)
f_gun <- Fest(gun)
k_gun <- Kest(gun)
l_gun <- Lest(gun)
pcf_gun <- pcf(gun)
par(mfrow = c(1, 1))
plot(g_gun)
plot(f_gun)
plot(k_gun)
plot(l_gun)
plot(pcf_gun)
#to calculate the function for a set of simulated realizations of IRP/CSR in the same study area.
g_gun_env <- envelope(gun, Gest, nsim=99, nrank=1)
library(sp)
library(spatstat)
library(sf)
library(spatstat.geom)
library(ctv)
library(terra)
library(spdep)
library(rgdal)
library(rgdal)
library(terra)
library(RColorBrewer)
library(classInt)
library(epitools)
library(DCluster)
library(rgdal))
library(sp)
library(spatstat)
library(sf)
library(spatstat.geom)
library(ctv)
library(terra)
library(spdep)
library(terra)
library(RColorBrewer)
library(classInt)
library(epitools)
library(DCluster)
library(rgdal)
library(maptools)
g_gun <- Gest(gun)
f_gun <- Fest(gun)
k_gun <- Kest(gun)
l_gun <- Lest(gun)
pcf_gun <- pcf(gun)
par(mfrow = c(1, 1))
plot(g_gun)
plot(f_gun)
plot(k_gun)
plot(l_gun)
plot(pcf_gun)
#to calculate the function for a set of simulated realizations of IRP/CSR in the same study area.
g_gun_env <- envelope(gun, Gest, nsim=99, nrank=1)
library(sp)
library(spatstat)
library(sf)
library(spatstat.geom)
library(ctv)
library(terra)
library(spdep)
library(terra)
library(RColorBrewer)
library(classInt)
library(epitools)
library(DCluster)
library(rgdal)
library(maptools)
g_gun <- Gest(gun)
f_gun <- Fest(gun)
k_gun <- Kest(gun)
l_gun <- Lest(gun)
pcf_gun <- pcf(gun)
par(mfrow = c(1, 1))
plot(g_gun)
plot(f_gun)
plot(k_gun)
plot(l_gun)
plot(pcf_gun)
#to calculate the function for a set of simulated realizations of IRP/CSR in the same study area.
g_gun_env <- envelope(gun, Gest, nsim=99, nrank=1)
g_gun <- Gest(gun)
f_gun <- Fest(gun)
k_gun <- Kest(gun)
l_gun <- Lest(gun)
pcf_gun <- pcf(gun)
par(mfrow = c(1, 1))
plot(g_gun)
plot(f_gun)
plot(k_gun)
plot(l_gun)
plot(pcf_gun)
#to calculate the function for a set of simulated realizations of IRP/CSR in the same study area.
g_gun_env <- envelope(gun, Gest, nsim=99, nrank=1)
library(rgdal)
library(spatstat)
library(sp)
library(sf)
library(spatstat.geom)
library(maptools)
# Read the shapefile
S <- readOGR("C:/Spatial Statistics Labwork/Lab4Data/city_limits_km.shp")
# Convert the Spatial object to SpatialPolygons
SP <- as(S, "SpatialPolygons")
SP <- as(S, "SpatialPolygons")
W <- as(SP, "owin")
plot(W)
xy <- read.table("C:/Spatial Statistics Labwork/Lab4Data/StLouisCrime2014.txt", header=T, sep="\t")
attach(xy)
pp <- ppp(X, Y, window=W, marks=CRIME)
plot(pp)
gun <- pp[CRIME=="DISORDERLY"]
rob <- pp[CRIME=="BURGLARY"]
hit <- pp[CRIME=="HITANDRUN"]
plot(density(gun))
contour(density(gun), add=T)
plot(gun, add=T)
#Kernel density visualization is performed in spatstat using the density() function
plot(density(gun, 0.25))
d250 <- density(gun, 0.25)
plot(d250)
contour(d250, add=T)
plot(gun, add=T)
plot(gun, add=T)
r <- bw.diggle(gun)
r
library(rgdal)
library(spatstat)
library(sp)
library(sf)
library(spatstat.geom)
library(maptools)
# Read the shapefile
S <- readOGR("C:/Spatial Statistics Labwork/Lab4Data/city_limits_km.shp")
# Convert the Spatial object to SpatialPolygons
SP <- as(S, "SpatialPolygons")
SP <- as(S, "SpatialPolygons")
W <- as(SP, "owin")
plot(W)
xy <- read.table("C:/Spatial Statistics Labwork/Lab4Data/StLouisCrime2014.txt", header=T, sep="\t")
attach(xy)
pp <- ppp(X, Y, window=W, marks=CRIME)
plot(pp)
gun <- pp[CRIME=="DISORDERLY"]
rob <- pp[CRIME=="BURGLARY"]
hit <- pp[CRIME=="HITANDRUN"]
plot(density(gun))
contour(density(gun), add=T)
plot(gun, add=T)
#Kernel density visualization is performed in spatstat using the density() function
plot(density(gun, 0.25))
d250 <- density(gun, 0.25)
plot(d250)
contour(d250, add=T)
plot(gun, add=T)
plot(gun, add=T)
r <- bw.diggle(gun)
r
nnd <- nndist.ppp(gun)
hist(nnd)
summary(nnd)
mnnd <- mean(nnd)
exp_nnd <- 0.5 / sqrt(gun$n / area.owin(W))
print (mnnd / exp_nnd)
par(mfrow=c(1,1))
q <- quadratcount(hit, 4, 8)
plot(q)
plot(hit, add=T)
quadrat.test(hit, 4, 8)
quadrat.test(hit, 4, 8, alternative="clustered")
quadrat.test(hit, 4, 8, alternative="regular")
par(mfrow=c(1,1))
q <- quadratcount(hit, 4, 8)
plot(q)
plot(hit, add=T)
quadrat.test(hit, 4, 8)
quadrat.test(hit, 4, 8, alternative="clustered")
quadrat.test(hit, 4, 8, alternative="regular")
g_gun <- Gest(gun)
f_gun <- Fest(gun)
k_gun <- Kest(gun)
l_gun <- Lest(gun)
pcf_gun <- pcf(gun)
par(mfrow = c(1, 1))
plot(g_gun)
plot(f_gun)
plot(k_gun)
plot(l_gun)
plot(pcf_gun)
#to calculate the function for a set of simulated realizations of IRP/CSR in the same study area.
g_gun_env <- envelope(gun, Gest, nsim=99, nrank=1)
g_gun <- Gest(gun)
f_gun <- Fest(gun)
k_gun <- Kest(gun)
l_gun <- Lest(gun)
pcf_gun <- pcf(gun)
par(mfrow = c(1, 1))
plot(g_gun)
plot(f_gun)
plot(k_gun)
plot(l_gun)
plot(pcf_gun)
#to calculate the function for a set of simulated realizations of IRP/CSR in the same study area.
g_gun_env <- envelope(gun, Gest, nsim=99, nrank=1)
g_gun <- Gest(gun)
f_gun <- Fest(gun)
k_gun <- Kest(gun)
l_gun <- Lest(gun)
pcf_gun <- pcf(gun)
par(mfrow = c(1, 1))
plot(g_gun)
plot(f_gun)
plot(k_gun)
plot(l_gun)
plot(pcf_gun)
#to calculate the function for a set of simulated realizations of IRP/CSR in the same study area.
g_gun_env <- envelope(gun, Gest, nsim=99, nrank=1)
g_gun <- Gest(gun)
f_gun <- Fest(gun)
k_gun <- Kest(gun)
l_gun <- Lest(gun)
pcf_gun <- pcf(gun)
par(mfrow = c(1, 1))
plot(g_gun)
plot(f_gun)
plot(k_gun)
plot(l_gun)
plot(pcf_gun)
#to calculate the function for a set of simulated realizations of IRP/CSR in the same study area.
g_gun_env <- envelope(gun, Gest, nsim=99, nrank=1)
K_e <- envelope(rob, Kest, nsim=19, nrank=1)
knitr::opts_chunk$set(echo = TRUE)
g_gun <- Gest(gun)
g_gun <- Gest(gun)
g_gun <- Gest(gun)
knitr::opts_chunk$set(echo = TRUE)
g_gun <- Gest(gun)
library(sp)
library(spatstat)
library(sf)
library(spatstat.geom)
library(ctv)
library(terra)
library(spdep)
library(terra)
library(RColorBrewer)
library(classInt)
library(epitools)
library(DCluster)
library(rgdal)
library(maptools)
g_gun <- Gest(gun)
f_gun <- Fest(gun)
k_gun <- Kest(gun)
l_gun <- Lest(gun)
pcf_gun <- pcf(gun)
par(mfrow = c(1, 1))
plot(g_gun)
plot(f_gun)
plot(k_gun)
plot(l_gun)
plot(pcf_gun)
#to calculate the function for a set of simulated realizations of IRP/CSR in the same study area.
g_gun_env <- envelope(gun, Gest, nsim=99, nrank=1)
g_gun <- Gest(gun)
f_gun <- Fest(gun)
k_gun <- Kest(gun)
l_gun <- Lest(gun)
pcf_gun <- pcf(gun)
par(mfrow = c(1, 1))
plot(g_gun)
plot(f_gun)
plot(k_gun)
plot(l_gun)
plot(pcf_gun)
#to calculate the function for a set of simulated realizations of IRP/CSR in the same study area.
g_gun_env <- envelope(gun, Gest, nsim=99, nrank=1)
g_gun <- Gest(gun)
f_gun <- Fest(gun)
k_gun <- Kest(gun)
l_gun <- Lest(gun)
pcf_gun <- pcf(gun)
par(mfrow = c(1, 1))
plot(g_gun)
plot(f_gun)
plot(k_gun)
plot(l_gun)
plot(pcf_gun)
library(spatstat)
# Assuming gun is a point pattern object and Gest is the summary function
# Run the envelope with 99 simulations
g_gun_env <- envelope(gun, Gest, nsim=99)
g_gun <- Gest(gun)
f_gun <- Fest(gun)
k_gun <- Kest(gun)
l_gun <- Lest(gun)
pcf_gun <- pcf(gun)
par(mfrow = c(1, 1))
plot(g_gun)
plot(f_gun)
plot(k_gun)
plot(l_gun)
plot(pcf_gun)
library(spatstat)
# Assuming gun is a point pattern object and Gest is the summary function
# Run the envelope with 99 simulations
# Extract the first-ranked envelope if that's what you need
# This will depend on what you mean by 'nrank=1'.
# If you meant the first rank as in the tightest envelope, you would need to extract it manually
# For example, you might want the lower and upper bounds of the first rank.
lower_env <- apply(g_gun_env$sim, 2, function(x) min(x))
g_gun <- Gest(gun)
f_gun <- Fest(gun)
k_gun <- Kest(gun)
l_gun <- Lest(gun)
pcf_gun <- pcf(gun)
par(mfrow = c(1, 1))
plot(g_gun)
plot(f_gun)
plot(k_gun)
plot(l_gun)
plot(pcf_gun)
library(spatstat)
# Assuming gun is a point pattern object and Gest is the summary function
# Run the envelope with 99 simulations
g_gun_env <- envelope(gun, Gest, nsim=99)
g_gun <- Gest(gun)
f_gun <- Fest(gun)
k_gun <- Kest(gun)
l_gun <- Lest(gun)
pcf_gun <- pcf(gun)
par(mfrow = c(1, 1))
plot(g_gun)
plot(f_gun)
plot(k_gun)
plot(l_gun)
plot(pcf_gun)
# Compute global envelopes
g_gun_env <- envelope(gun)
library(spatstat)
g_gun <- Gest(gun)
f_gun <- Fest(gun)
k_gun <- Kest(gun)
l_gun <- Lest(gun)
pcf_gun <- pcf(gun)
par(mfrow = c(1, 1))
plot(g_gun)
plot(f_gun)
plot(k_gun)
plot(l_gun)
plot(pcf_gun)
# Compute global envelopes
g_gun_env <- envelope(gun)
library(spatstat)
g_gun <- Gest(gun)
f_gun <- Fest(gun)
k_gun <- Kest(gun)
l_gun <- Lest(gun)
pcf_gun <- pcf(gun)
par(mfrow = c(1, 1))
plot(g_gun)
plot(f_gun)
plot(k_gun)
plot(l_gun)
plot(pcf_gun)
# Compute global envelopes
# Define a spatial window (e.g., a square)
W <- owin(c(0, 10), c(0, 10))
# Simulate a spatial point pattern (e.g., Poisson process)
gun <- rpoispp(lambda = 10, win = W)
# Compute the global envelope
g_gun_env <- envelope(gun)
library(spatstat)
g_gun <- Gest(gun)
f_gun <- Fest(gun)
k_gun <- Kest(gun)
l_gun <- Lest(gun)
pcf_gun <- pcf(gun)
par(mfrow = c(1, 1))
plot(g_gun)
plot(f_gun)
plot(k_gun)
plot(l_gun)
plot(pcf_gun)
#to calculate the function for a set of simulated realizations of IRP/CSR in the same study area.
g_gun_env <- envelope(gun, Gest, nsim=99, nrank=1)
G_e <- envelope(hit, Gest, nsim=99, nrank=5)
g_gun <- Gest(gun)
f_gun <- Fest(gun)
k_gun <- Kest(gun)
l_gun <- Lest(gun)
pcf_gun <- pcf(gun)
par(mfrow = c(1, 1))
plot(g_gun)
plot(f_gun)
plot(k_gun)
plot(l_gun)
plot(pcf_gun)
#to calculate the function for a set of simulated realizations of IRP/CSR in the same study area.
g_gun_env <- envelope(gun, Gest, nsim=99, nrank=1)
